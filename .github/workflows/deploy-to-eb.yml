name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - dev
      - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'prod' && 'Production' || github.ref_name == 'dev' && 'Development' || '' }}
    permissions:
      id-token: write
      contents: read
    env:
      # secrets. pulls from repository secrets
      DB_ENDPOINT: ${{ secrets.DB_ENDPOINT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: ${{ secrets.DB_PORT }}
      JOB_ENV: ${{ github.ref_name == 'prod' && 'Production' || github.ref_name == 'dev' && 'Development' || '' }}
    steps:
      - name: Print Environment
        run: |
          echo "Deploying to environment: ${{ env.JOB_ENV }}"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # vars. pulls from environment variables, set in GitHub Settings Environments
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.AWS_REGION }}
          audience: sts.amazonaws.com
          output-env-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test Procfile command, ensure app starts
        run: |
          uvicorn app.main:app --host=0.0.0.0 --port=5000 &
          sleep 5
          curl --fail http://localhost:5000/health || (echo "App failed to start" && exit 1)
          pkill -f "uvicorn"

      - name: Package application
        run: |
          zip -r app.zip . -x "*.git*" "*.venv*" "__pycache__/*"

      - name: Upload to S3
        run: |
          aws s3 cp app.zip s3://${{ vars.EB_S3_BUCKET }}/app-${{ github.sha }}.zip

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ vars.EB_APP_NAME }} \
            --version-label ${{ github.sha }} \
            --source-bundle S3Bucket=${{ vars.EB_S3_BUCKET }},S3Key=app-${{ github.sha }}.zip
          aws elasticbeanstalk update-environment \
            --environment-name ${{ vars.EB_ENV_NAME }} \
            --version-label ${{ github.sha }}
